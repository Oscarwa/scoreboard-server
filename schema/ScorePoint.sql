-- MySQL Script generated by MySQL Workbench
-- Fri Apr  8 13:51:54 2016
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema scorepoint
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `scorepoint` ;

-- -----------------------------------------------------
-- Schema scorepoint
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `scorepoint` DEFAULT CHARACTER SET latin1 ;
USE `scorepoint` ;

-- -----------------------------------------------------
-- Table `scorepoint`.`User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `scorepoint`.`User` ;

CREATE TABLE IF NOT EXISTS `scorepoint`.`User` (
  `userId` INT(11) NOT NULL AUTO_INCREMENT,
  `firstName` VARCHAR(255) NOT NULL,
  `lastName` VARCHAR(255) NOT NULL,
  `userName` VARCHAR(255) NOT NULL,
  `imageUrl` VARCHAR(255) NULL DEFAULT NULL,
  `enable` BIT(1) NOT NULL DEFAULT b'1',
  `googleGuid` VARCHAR(255) NULL DEFAULT NULL,
  `email` VARCHAR(255) NULL DEFAULT NULL,
  `initialRank` INT(11) NOT NULL DEFAULT '0' COMMENT 'The initial rank for the player',
  PRIMARY KEY (`userId`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `scorepoint`.`role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `scorepoint`.`role` ;

CREATE TABLE IF NOT EXISTS `scorepoint`.`role` (
  `roleId` INT(11) NOT NULL AUTO_INCREMENT COMMENT 'The User Roles Table',
  `roleName` VARCHAR(45) NOT NULL COMMENT 'The Role Name',
  `description` TEXT NOT NULL COMMENT 'The Role Description',
  PRIMARY KEY (`roleId`))
ENGINE = InnoDB
AUTO_INCREMENT = 5
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `scorepoint`.`User_has_Role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `scorepoint`.`User_has_Role` ;

CREATE TABLE IF NOT EXISTS `scorepoint`.`User_has_Role` (
  `User_playerId` INT(11) NOT NULL,
  `Role_roleId` INT(11) NOT NULL,
  PRIMARY KEY (`User_playerId`, `Role_roleId`),
  CONSTRAINT `fk_User_has_Role_Role1`
    FOREIGN KEY (`Role_roleId`)
    REFERENCES `scorepoint`.`role` (`roleId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_Role_User1`
    FOREIGN KEY (`User_playerId`)
    REFERENCES `scorepoint`.`User` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

CREATE INDEX `fk_User_has_Role_Role1_idx` ON `scorepoint`.`User_has_Role` (`Role_roleId` ASC);

CREATE INDEX `fk_User_has_Role_User1_idx` ON `scorepoint`.`User_has_Role` (`User_playerId` ASC);


-- -----------------------------------------------------
-- Table `scorepoint`.`tournament`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `scorepoint`.`tournament` ;

CREATE TABLE IF NOT EXISTS `scorepoint`.`tournament` (
  `tournamentId` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `startDate` DATE NOT NULL,
  `endDate` DATE NULL DEFAULT NULL,
  `pointValue` INT(11) NOT NULL,
  PRIMARY KEY (`tournamentId`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

CREATE UNIQUE INDEX `name_UNIQUE` ON `scorepoint`.`tournament` (`name` ASC);


-- -----------------------------------------------------
-- Table `scorepoint`.`game`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `scorepoint`.`game` ;

CREATE TABLE IF NOT EXISTS `scorepoint`.`game` (
  `gameId` INT(11) NOT NULL AUTO_INCREMENT,
  `active` BIT(1) NOT NULL DEFAULT b'1' COMMENT 'The User Team table enable to support a team',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `tournament_tournamentId` INT(11) NULL DEFAULT NULL,
  PRIMARY KEY (`gameId`),
  CONSTRAINT `fk_game_tournament1`
    FOREIGN KEY (`tournament_tournamentId`)
    REFERENCES `scorepoint`.`tournament` (`tournamentId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

CREATE INDEX `fk_game_tournament1_idx` ON `scorepoint`.`game` (`tournament_tournamentId` ASC);


-- -----------------------------------------------------
-- Table `scorepoint`.`team`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `scorepoint`.`team` ;

CREATE TABLE IF NOT EXISTS `scorepoint`.`team` (
  `idTeam` INT(11) NOT NULL AUTO_INCREMENT,
  `pair` BIT(1) NOT NULL DEFAULT b'0' COMMENT 'the teams is of two people?',
  `active` BIT(1) NOT NULL DEFAULT b'1',
  `gameId` INT(11) NOT NULL,
  PRIMARY KEY (`idTeam`),
  CONSTRAINT `fk_team_game1`
    FOREIGN KEY (`gameId`)
    REFERENCES `scorepoint`.`game` (`gameId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

CREATE INDEX `fk_team_game1_idx` ON `scorepoint`.`team` (`gameId` ASC);


-- -----------------------------------------------------
-- Table `scorepoint`.`User_has_team`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `scorepoint`.`User_has_team` ;

CREATE TABLE IF NOT EXISTS `scorepoint`.`User_has_team` (
  `userId` INT(11) NOT NULL,
  `idTeam` INT(11) NOT NULL,
  PRIMARY KEY (`userId`, `idTeam`),
  CONSTRAINT `fk_User_has_team_team1`
    FOREIGN KEY (`idTeam`)
    REFERENCES `scorepoint`.`team` (`idTeam`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_team_User1`
    FOREIGN KEY (`userId`)
    REFERENCES `scorepoint`.`User` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

CREATE INDEX `fk_User_has_team_team1_idx` ON `scorepoint`.`User_has_team` (`idTeam` ASC);

CREATE INDEX `fk_User_has_team_User1_idx` ON `scorepoint`.`User_has_team` (`userId` ASC);


-- -----------------------------------------------------
-- Table `scorepoint`.`challenge_request`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `scorepoint`.`challenge_request` ;

CREATE TABLE IF NOT EXISTS `scorepoint`.`challenge_request` (
  `challenge_requestid` INT(11) NOT NULL AUTO_INCREMENT,
  `challenger_id` INT(11) NOT NULL COMMENT 'The team who is challenging to other ',
  `victim_id` INT(11) NOT NULL COMMENT 'the victim will be destroyed',
  PRIMARY KEY (`challenge_requestid`),
  CONSTRAINT `fk_challenge_request_team1`
    FOREIGN KEY (`challenger_id`)
    REFERENCES `scorepoint`.`team` (`idTeam`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_challenge_request_team2`
    FOREIGN KEY (`victim_id`)
    REFERENCES `scorepoint`.`team` (`idTeam`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

CREATE INDEX `fk_challenge_request_team1_idx` ON `scorepoint`.`challenge_request` (`challenger_id` ASC);

CREATE INDEX `fk_challenge_request_team2_idx` ON `scorepoint`.`challenge_request` (`victim_id` ASC);


-- -----------------------------------------------------
-- Table `scorepoint`.`match`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `scorepoint`.`match` ;

CREATE TABLE IF NOT EXISTS `scorepoint`.`match` (
  `idmatch` INT(11) NOT NULL AUTO_INCREMENT,
  `started` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idmatch`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `scorepoint`.`permission`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `scorepoint`.`permission` ;

CREATE TABLE IF NOT EXISTS `scorepoint`.`permission` (
  `permissionId` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` TEXT NOT NULL,
  PRIMARY KEY (`permissionId`))
ENGINE = InnoDB
AUTO_INCREMENT = 8
DEFAULT CHARACTER SET = latin1;

CREATE UNIQUE INDEX `name_UNIQUE` ON `scorepoint`.`permission` (`name` ASC);


-- -----------------------------------------------------
-- Table `scorepoint`.`role_has_permission`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `scorepoint`.`role_has_permission` ;

CREATE TABLE IF NOT EXISTS `scorepoint`.`role_has_permission` (
  `Role_roleId` INT(11) NOT NULL,
  `Permission_permissionId` INT(11) NOT NULL,
  PRIMARY KEY (`Role_roleId`, `Permission_permissionId`),
  CONSTRAINT `fk_Role_has_Permission_Permission1`
    FOREIGN KEY (`Permission_permissionId`)
    REFERENCES `scorepoint`.`permission` (`permissionId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Role_has_Permission_Role`
    FOREIGN KEY (`Role_roleId`)
    REFERENCES `scorepoint`.`role` (`roleId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

CREATE INDEX `fk_Role_has_Permission_Permission1_idx` ON `scorepoint`.`role_has_permission` (`Permission_permissionId` ASC);

CREATE INDEX `fk_Role_has_Permission_Role_idx` ON `scorepoint`.`role_has_permission` (`Role_roleId` ASC);


-- -----------------------------------------------------
-- Table `scorepoint`.`set`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `scorepoint`.`set` ;

CREATE TABLE IF NOT EXISTS `scorepoint`.`set` (
  `setId` INT(11) NOT NULL AUTO_INCREMENT,
  `order` INT(11) NULL DEFAULT NULL,
  `idmatch` INT(11) NOT NULL,
  `teamWinnerId` INT(11) NULL DEFAULT NULL,
  PRIMARY KEY (`setId`),
  CONSTRAINT `fk_set_match1`
    FOREIGN KEY (`idmatch`)
    REFERENCES `scorepoint`.`match` (`idmatch`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_set_team1`
    FOREIGN KEY (`teamWinnerId`)
    REFERENCES `scorepoint`.`team` (`idTeam`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

CREATE INDEX `fk_set_match1_idx` ON `scorepoint`.`set` (`idmatch` ASC);

CREATE INDEX `fk_set_team1_idx` ON `scorepoint`.`set` (`teamWinnerId` ASC);


-- -----------------------------------------------------
-- Table `scorepoint`.`teamRequest`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `scorepoint`.`teamRequest` ;

CREATE TABLE IF NOT EXISTS `scorepoint`.`teamRequest` (
  `idteamRequest` INT(11) NOT NULL,
  `user_emiter` INT(11) NOT NULL COMMENT 'the people who request team with something',
  `user_receptor` INT(11) NOT NULL COMMENT 'The user who accept or reject the team association',
  `datetime` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idteamRequest`),
  CONSTRAINT `fk_teamRequest_User1`
    FOREIGN KEY (`user_emiter`)
    REFERENCES `scorepoint`.`User` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_teamRequest_User2`
    FOREIGN KEY (`user_receptor`)
    REFERENCES `scorepoint`.`User` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

CREATE INDEX `fk_teamRequest_User1_idx` ON `scorepoint`.`teamRequest` (`user_emiter` ASC);

CREATE INDEX `fk_teamRequest_User2_idx` ON `scorepoint`.`teamRequest` (`user_receptor` ASC);


-- -----------------------------------------------------
-- Table `scorepoint`.`teamSetScore`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `scorepoint`.`teamSetScore` ;

CREATE TABLE IF NOT EXISTS `scorepoint`.`teamSetScore` (
  `playerSetScroreId` INT(11) NOT NULL AUTO_INCREMENT,
  `score` INT(11) NOT NULL DEFAULT '0',
  `set_setId` INT(11) NOT NULL,
  `team_idTeam` INT(11) NOT NULL,
  PRIMARY KEY (`playerSetScroreId`),
  CONSTRAINT `fk_teamSetScore_set1`
    FOREIGN KEY (`set_setId`)
    REFERENCES `scorepoint`.`set` (`setId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_teamSetScore_team1`
    FOREIGN KEY (`team_idTeam`)
    REFERENCES `scorepoint`.`team` (`idTeam`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

CREATE INDEX `fk_teamSetScore_set1_idx` ON `scorepoint`.`teamSetScore` (`set_setId` ASC);

CREATE INDEX `fk_teamSetScore_team1_idx` ON `scorepoint`.`teamSetScore` (`team_idTeam` ASC);


-- -----------------------------------------------------
-- Table `scorepoint`.`team_has_match`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `scorepoint`.`team_has_match` ;

CREATE TABLE IF NOT EXISTS `scorepoint`.`team_has_match` (
  `idTeam` INT(11) NOT NULL,
  `idmatch` INT(11) NOT NULL,
  PRIMARY KEY (`idTeam`, `idmatch`),
  CONSTRAINT `fk_team_has_match_team1`
    FOREIGN KEY (`idTeam`)
    REFERENCES `scorepoint`.`team` (`idTeam`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_team_has_match_match1`
    FOREIGN KEY (`idmatch`)
    REFERENCES `scorepoint`.`match` (`idmatch`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

CREATE INDEX `fk_team_has_match_match1_idx` ON `scorepoint`.`team_has_match` (`idmatch` ASC);

CREATE INDEX `fk_team_has_match_team1_idx` ON `scorepoint`.`team_has_match` (`idTeam` ASC);

USE `scorepoint` ;

-- -----------------------------------------------------
-- Placeholder table for view `scorepoint`.`user_stats`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `scorepoint`.`user_stats` (`userId` INT, `userName` INT, `gameId` INT);

-- -----------------------------------------------------
-- View `scorepoint`.`user_stats`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `scorepoint`.`user_stats` ;
DROP TABLE IF EXISTS `scorepoint`.`user_stats`;
USE `scorepoint`;
CREATE  OR REPLACE VIEW `user_stats` AS
CREATE VIEW `user_stats` AS
SELECT u.userId, u.userName, g.gameId, COUNT(s.setId) as total_sets, SUM( IF(s.teamWinnerId = t.idTeam,1,0) ) AS winner_sets
FROM User u
INNER JOIN User_has_team u_t ON u.userId = u_t.userId
INNER JOIN team t ON u_t.idTeam = t.idTeam
INNER JOIN game g ON t.gameId = g.gameId
INNER JOIN team_has_match t_m ON t.idTeam = t_m.idTeam
INNER JOIN `match` m ON t_m.idmatch = m.idmatch
INNER JOIN `set` s ON m.idmatch = s.idmatch

GROUP BY m.idmatch

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
